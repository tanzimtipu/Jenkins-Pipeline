pipeline {
    agent any 
    environment {
        DIRECTORY_PATH = 'C:/jenkins'
        STAGING_ENVIRONMENT = 'staging-env'
        PRODUCTION_ENVIRONMENT = 'prod-env'
    }
    stages {
        stage('Build') {
            steps {
                // Building the code using Maven to compile and package it.
                echo 'Building the code using Maven.'
                sh 'mvn clean install'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Running unit and integration tests using JUnit and TestNG.
                echo 'Running unit and integration tests.'
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                // Analyzing the code quality using SonarQube.
                echo 'Analyzing the code quality.'
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                // Performing security scan using OWASP Dependency-Check.
                echo 'Performing security scan.'
                sh 'dependency-check.sh --project MyProject --scan ./'
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploying to staging server on AWS EC2 instance.
                echo 'Deploying to staging server.'
                sh './deploy-to-staging.sh'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Running integration tests on staging environment using Postman.
                echo 'Running integration tests on staging.'
                sh 'newman run my-collection.postman_collection.json'
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploying to production server on AWS EC2 instance.
                echo 'Deploying to production server.'
                sh './deploy-to-production.sh'
            }
        }
    }
}
